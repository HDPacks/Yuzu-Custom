# This is the CMakeCache file.
# For build in directory: f:/custom-build/Yuzu-1703
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build rust backends
BUILD_RUST_LIBS:BOOL=OFF

//Build the testing tree.
BUILD_TESTING:BOOL=OFF

//Bundle the speex library
BUNDLE_SPEEX:BOOL=OFF

//Boost context library (debug)
Boost_CONTEXT_LIBRARY_DEBUG:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib/boost_context-vc140-mt-gd.lib

//Boost context library (release)
Boost_CONTEXT_LIBRARY_RELEASE:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib/boost_context-vc140-mt.lib

//Path to a file.
Boost_INCLUDE_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include

//Boost library directory DEBUG
Boost_LIBRARY_DIR_DEBUG:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib

//Boost library directory RELEASE
Boost_LIBRARY_DIR_RELEASE:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib

//The path to Brotli's include directory.
Brotli_INCLUDE_DIR:PATH=Brotli_INCLUDE_DIR-NOTFOUND

//Path to a library.
Brotli_common:FILEPATH=Brotli_common-NOTFOUND

//Path to a library.
Brotli_decoder:FILEPATH=Brotli_decoder-NOTFOUND

//Path to a library.
Brotli_encoder:FILEPATH=Brotli_encoder-NOTFOUND

//Path to a program.
CLANG_FORMAT:FILEPATH=F:/custom-build/Yuzu-1703/externals/clang-format-15.exe

//Path to a program.
CMAKE_AR:FILEPATH=E:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/lib.exe

//ASM compiler
CMAKE_ASM_COMPILER:STRING=E:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/cl.exe

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=

//Choose the type of build: None Debug Release Coverage ASan ASanDbg
// MemSan MemSanDbg Check CheckFull
CMAKE_BUILD_TYPE:STRING=Release

CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/DEBUG /MANIFEST:NO

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/DEBUG /MANIFEST:NO /INCREMENTAL:NO /OPT:REF,ICF

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=F:/custom-build/Yuzu-1703/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=F:/custom-build/yuzu

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=E:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=yuzu

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=6.68

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=6

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=68

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=OFF

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=OFF

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=OFF

//Path to the coverage program that CTest uses for performing coverage
// inspection
COVERAGE_COMMAND:FILEPATH=COVERAGE_COMMAND-NOTFOUND

//Extra command line flags to pass to the coverage tool
COVERAGE_EXTRA_FLAGS:STRING=-l

//How many times to retry timed-out CTest submissions.
CTEST_SUBMIT_RETRY_COUNT:STRING=3

//How long to wait between timed-out CTest submissions.
CTEST_SUBMIT_RETRY_DELAY:STRING=5

//Path to a program.
CYGWIN_BAT:FILEPATH=E:/cygwin64/Cygwin.bat

//The directory containing a CMake configuration file for Catch2.
Catch2_DIR:PATH=Catch2_DIR-NOTFOUND

//Maximum time allowed before CTest will kill the test.
DART_TESTING_TIMEOUT:STRING=1500

//Path to a program.
DATE_PROG:FILEPATH=DATE_PROG-NOTFOUND

//Dot tool for use with Doxygen
DOXYGEN_DOT_EXECUTABLE:FILEPATH=DOXYGEN_DOT_EXECUTABLE-NOTFOUND

//Doxygen documentation generation tool (https://www.doxygen.nl)
DOXYGEN_EXECUTABLE:FILEPATH=DOXYGEN_EXECUTABLE-NOTFOUND

//Turning this off causes dynarmic to assume the host CPU doesn't
// support anything later than SSE3
DYNARMIC_ENABLE_CPU_FEATURE_DETECTION:BOOL=ON

//Enables support for systems that require W^X
DYNARMIC_ENABLE_NO_EXECUTE_SUPPORT:BOOL=OFF

//Errors are fatal
DYNARMIC_FATAL_ERRORS:BOOL=OFF

//Selects which frontends to enable
DYNARMIC_FRONTENDS:STRING=A32;A64

//Build tests
DYNARMIC_TESTS:BOOL=OFF

//Enable fuzzing tests against unicorn
DYNARMIC_TESTS_USE_UNICORN:BOOL=OFF

//Use all bundled externals (useful when e.g. cross-compiling)
DYNARMIC_USE_BUNDLED_EXTERNALS:BOOL=OFF

//Support disassembly of jitted x86_64 code using LLVM
DYNARMIC_USE_LLVM:BOOL=OFF

//Use precompiled headers
DYNARMIC_USE_PRECOMPILED_HEADERS:BOOL=ON

//Warnings as errors
DYNARMIC_WARNINGS_AS_ERRORS:BOOL=OFF

//Enables the cubeb audio backend
ENABLE_CUBEB:BOOL=ON

//Enable the use of LibUSB
ENABLE_LIBUSB:BOOL=ON

//Enable OpenGL
ENABLE_OPENGL:BOOL=ON

//Enable OpenSSL backend for ISslConnection
ENABLE_OPENSSL:BOOL=OFF

//Build mbed TLS programs.
ENABLE_PROGRAMS:BOOL=OFF

//Enable the Qt frontend
ENABLE_QT:BOOL=ON

//Allow usage of Qt6 to be attempted
ENABLE_QT6:BOOL=OFF

//Enable translations for the Qt frontend
ENABLE_QT_TRANSLATION:BOOL=OFF

//Enable the SDL2 frontend
ENABLE_SDL2:BOOL=ON

//Build mbed TLS tests.
ENABLE_TESTING:BOOL=OFF

//Enable web services (telemetry, etc.)
ENABLE_WEB_SERVICE:BOOL=ON

//Build mbed TLS with zlib library.
ENABLE_ZLIB_SUPPORT:BOOL=OFF

//Path to FFmpeg headers
FFmpeg_INCLUDE_DIR:PATH=F:/custom-build/Yuzu-1703/externals/ffmpeg-6.0/include

//FFmpeg linker flags
FFmpeg_LDFLAGS:STRING=

//Paths to FFmpeg libraries
FFmpeg_LIBRARIES:PATH=F:/custom-build/Yuzu-1703/externals/ffmpeg-6.0/bin/swscale.lib;F:/custom-build/Yuzu-1703/externals/ffmpeg-6.0/bin/avcodec.lib;F:/custom-build/Yuzu-1703/externals/ffmpeg-6.0/bin/avfilter.lib;F:/custom-build/Yuzu-1703/externals/ffmpeg-6.0/bin/avutil.lib

//Path to FFmpeg library directory
FFmpeg_LIBRARY_DIR:PATH=F:/custom-build/Yuzu-1703/externals/ffmpeg-6.0/bin

//Path to a program.
GIT:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Path to a program.
GITCOMMAND:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Git command line client
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git/cmd/git.exe

//Path to a program.
GLSLANGVALIDATOR:FILEPATH=C:/VulkanSDK/1.3.268.0/Bin/glslangValidator.exe

//Path to a program.
GNU_MAKE:FILEPATH=GNU_MAKE-NOTFOUND

//If ON, uses a Python script to split the header into a compilable
// header & source file (requires Python v3).
HTTPLIB_COMPILE:BOOL=OFF

//Enables the installation target
HTTPLIB_INSTALL:BOOL=ON

//Disable the use of C++ exceptions
HTTPLIB_NO_EXCEPTIONS:BOOL=OFF

//Requires Brotli to be found & linked, or fails build.
HTTPLIB_REQUIRE_BROTLI:BOOL=OFF

//Requires ZLIB to be found & linked, or fails build.
HTTPLIB_REQUIRE_ZLIB:BOOL=OFF

//Enables testing and builds tests
HTTPLIB_TEST:BOOL=OFF

//Uses Brotli (if available) to enable Brotli decompression support.
HTTPLIB_USE_BROTLI_IF_AVAILABLE:BOOL=ON

//Enable feature to load system certs from the Apple Keychain.
HTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN:BOOL=ON

//Uses OpenSSL (if available) to enable HTTPS support.
HTTPLIB_USE_OPENSSL_IF_AVAILABLE:BOOL=ON

//Uses ZLIB (if available) to enable Zlib compression support.
HTTPLIB_USE_ZLIB_IF_AVAILABLE:BOOL=ON

//Install mbed TLS headers.
INSTALL_MBEDTLS_HEADERS:BOOL=ON

//Lazily load shared libraries
LAZY_LOAD_LIBS:BOOL=ON

//Path to a library.
LIB_EAY_DEBUG:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib/libcrypto.lib

//Path to a library.
LIB_EAY_RELEASE:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib/libcrypto.lib

//Explicitly link mbed TLS library to pthread.
LINK_WITH_PTHREAD:BOOL=OFF

//The directory containing a CMake configuration file for LLVM.
LLVM_DIR:PATH=LLVM_DIR-NOTFOUND

//Command to build the project
MAKECOMMAND:STRING="C:\Program Files\CMake\bin\cmake.exe" --build . --config "${CTEST_CONFIGURATION_TYPE}"

//Warnings as errors
MCL_WARNINGS_AS_ERRORS:BOOL=OFF

//Path to the memory checking command, used for memory error detection.
MEMORYCHECK_COMMAND:FILEPATH=D:/Program Files/NVIDIA/CUDA GPU Computing Toolkit/bin/cuda-memcheck.exe

//File that contains suppressions for the memory checker
MEMORYCHECK_SUPPRESSIONS_FILE:FILEPATH=

//Path to a program.
MSYS_CMD:FILEPATH=MSYS_CMD-NOTFOUND

//Path to a file.
OPENSSL_APPLINK_SOURCE:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include/openssl/applink.c

//Path to a file.
OPENSSL_INCLUDE_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include

//additional software error checking.
OPUS_ASSERTIONS:BOOL=OFF

//build shared library.
OPUS_BUILD_SHARED_LIBRARY:BOOL=OFF

//enable bit-exactness checks between optimized and c implementations.
OPUS_CHECK_ASM:BOOL=OFF

//enable non-Opus modes, e.g. 44.1 kHz & 2^n frames.
OPUS_CUSTOM_MODES:BOOL=OFF

//disable all intrinsics optimizations.
OPUS_DISABLE_INTRINSICS:BOOL=OFF

//compile with the floating point API (for machines with float
// library).
OPUS_ENABLE_FLOAT_API:BOOL=ON

//compile as fixed-point (for machines without a fast enough FPU).
OPUS_FIXED_POINT:BOOL=OFF

//enable floating point approximations (Ensure your platform supports
// IEEE 754 before enabling).
OPUS_FLOAT_APPROX:BOOL=OFF

//causes the encoder to make random decisions (do not use in production).
OPUS_FUZZING:BOOL=OFF

//run-time checks that are cheap and safe for use in production.
OPUS_HARDENING:BOOL=ON

//use stack protection.
OPUS_STACK_PROTECTOR:BOOL=ON

//use alloca for stack arrays (on non-C99 compilers).
OPUS_USE_ALLOCA:BOOL=ON

//does runtime check for AVX support.
OPUS_X86_MAY_HAVE_AVX:BOOL=ON

//does runtime check for SSE1 support.
OPUS_X86_MAY_HAVE_SSE:BOOL=ON

//does runtime check for SSE2 support.
OPUS_X86_MAY_HAVE_SSE2:BOOL=ON

//does runtime check for SSE4.1 support.
OPUS_X86_MAY_HAVE_SSE4_1:BOOL=ON

//assume target CPU has AVX support (override runtime check).
OPUS_X86_PRESUME_AVX:BOOL=OFF

//assume target CPU has SSE1 support (override runtime check).
OPUS_X86_PRESUME_SSE:BOOL=ON

//assume target CPU has SSE2 support (override runtime check).
OPUS_X86_PRESUME_SSE2:BOOL=ON

//assume target CPU has SSE4.1 support (override runtime check).
OPUS_X86_PRESUME_SSE4_1:BOOL=OFF

//Value Computed by CMake
Opus_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/opus

//Value Computed by CMake
Opus_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
Opus_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/opus

//Path to a program.
PERL_EXECUTABLE:FILEPATH=E:/cygwin64/bin/perl.exe

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=D:/Python310/python.exe

//Additional Location to search for Qt6 libraries like C:/Qt/6.3.1/msvc2019_64/
QT6_LOCATION:PATH=

//The directory containing a CMake configuration file for Qt5Concurrent.
Qt5Concurrent_DIR:PATH=F:/custom-build/Yuzu-1703/externals/qt-5.15.2-msvc2019_64/lib/cmake/Qt5Concurrent

//The directory containing a CMake configuration file for Qt5Core.
Qt5Core_DIR:PATH=F:/custom-build/Yuzu-1703/externals/qt-5.15.2-msvc2019_64/lib/cmake/Qt5Core

//The directory containing a CMake configuration file for Qt5Gui.
Qt5Gui_DIR:PATH=F:/custom-build/Yuzu-1703/externals/qt-5.15.2-msvc2019_64/lib/cmake/Qt5Gui

//The directory containing a CMake configuration file for Qt5Multimedia.
Qt5Multimedia_DIR:PATH=F:/custom-build/Yuzu-1703/externals/qt-5.15.2-msvc2019_64/lib/cmake/Qt5Multimedia

//The directory containing a CMake configuration file for Qt5Network.
Qt5Network_DIR:PATH=F:/custom-build/Yuzu-1703/externals/qt-5.15.2-msvc2019_64/lib/cmake/Qt5Network

//The directory containing a CMake configuration file for Qt5Widgets.
Qt5Widgets_DIR:PATH=F:/custom-build/Yuzu-1703/externals/qt-5.15.2-msvc2019_64/lib/cmake/Qt5Widgets

//The directory containing a CMake configuration file for Qt5.
Qt5_DIR:PATH=F:/custom-build/Yuzu-1703/externals/qt-5.15.2-msvc2019_64/lib/cmake/Qt5

//Path to a file.
RenderDoc_INCLUDE_DIR:PATH=RenderDoc_INCLUDE_DIR-NOTFOUND

//Enable AddressSanitizer for sanitized targets.
SANITIZE_ADDRESS:BOOL=OFF

//Try to link static against sanitizers.
SANITIZE_LINK_STATIC:BOOL=OFF

//Enable MemorySanitizer for sanitized targets.
SANITIZE_MEMORY:BOOL=OFF

//Enable ThreadSanitizer for sanitized targets.
SANITIZE_THREAD:BOOL=OFF

//Enable UndefinedBehaviorSanitizer for sanitized targets.
SANITIZE_UNDEFINED:BOOL=OFF

//Path to SDL2.dll
SDL2_DLL_DIR:PATH=F:/custom-build/Yuzu-1703/externals/SDL2-2.28.2/lib/x64

//Path to SDL2 headers
SDL2_INCLUDE_DIR:PATH=F:/custom-build/Yuzu-1703/externals/SDL2-2.28.2/include

//Path to SDL2 library
SDL2_LIBRARY:PATH=F:/custom-build/Yuzu-1703/externals/SDL2-2.28.2/lib/x64/SDL2.lib

//Build tests
SIRIT_TESTS:BOOL=OFF

//Use system SPIR-V headers
SIRIT_USE_SYSTEM_SPIRV_HEADERS:BOOL=OFF

//Name of the computer/site where compile is being run
SITE:STRING=DESKTOP-93SBEMV

//Value Computed by CMake
SPIRV-Headers_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/sirit/externals/SPIRV-Headers

//Value Computed by CMake
SPIRV-Headers_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
SPIRV-Headers_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/sirit/externals/SPIRV-Headers

//Skip building examples
SPIRV_HEADERS_SKIP_EXAMPLES:BOOL=OFF

//Skip install
SPIRV_HEADERS_SKIP_INSTALL:BOOL=OFF

//Path to a library.
SSL_EAY_DEBUG:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib/libssl.lib

//Path to a library.
SSL_EAY_RELEASE:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib/libssl.lib

//Value Computed by CMake
SimpleIni_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/simpleini

//The directory containing a CMake configuration file for SimpleIni.
SimpleIni_DIR:PATH=SimpleIni_DIR-NOTFOUND

//Value Computed by CMake
SimpleIni_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
SimpleIni_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/simpleini

//Allow unsafe builds. These builds ARE NOT SECURE.
UNSAFE_BUILD:BOOL=OFF

//Run update_deps.py for user
UPDATE_DEPS:BOOL=OFF

//Enables Discord Rich Presence
USE_DISCORD_PRESENCE:BOOL=OFF

//Build mbed TLS with the pkcs11-helper library.
USE_PKCS11_HELPER_LIBRARY:BOOL=OFF

//Use sanitizers
USE_SANITIZERS:BOOL=ON

//Build mbed TLS shared library.
USE_SHARED_MBEDTLS_LIBRARY:BOOL=OFF

//Build mbed TLS static library.
USE_STATIC_MBEDTLS_LIBRARY:BOOL=ON

//Automatically copy dependencies into the output directory for
// executables.
VCPKG_APPLOCAL_DEPS:BOOL=ON

//Additional options to bootstrap vcpkg
VCPKG_BOOTSTRAP_OPTIONS:STRING=

//The directory which contains the installed libraries for each
// triplet
VCPKG_INSTALLED_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed

//Additional install options to pass to vcpkg
VCPKG_INSTALL_OPTIONS:STRING=

//The path to the vcpkg manifest directory.
VCPKG_MANIFEST_DIR:PATH=C:/Users/curti/yuzu

//Install the dependencies listed in your manifest:
//\n    If this is off, you will have to manually install your dependencies.
//\n    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md
// for more info.
//\n
VCPKG_MANIFEST_INSTALL:BOOL=ON

//Use manifest mode, as opposed to classic mode.
VCPKG_MANIFEST_MODE:BOOL=ON

//Overlay ports to use for vcpkg install in manifest mode
VCPKG_OVERLAY_PORTS:STRING=

//Overlay triplets to use for vcpkg install in manifest mode
VCPKG_OVERLAY_TRIPLETS:STRING=

//Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH
// and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are
// found after toolchain/system libraries/packages.
VCPKG_PREFER_SYSTEM_LIBS:BOOL=OFF

//Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths
VCPKG_SETUP_CMAKE_PROGRAM_PATH:BOOL=ON

//Vcpkg target triplet (ex. x86-windows)
VCPKG_TARGET_TRIPLET:STRING=x64-windows

//Trace calls to find_package()
VCPKG_TRACE_FIND_PACKAGE:BOOL=OFF

//Enables messages from the VCPKG toolchain for debugging purposes.
VCPKG_VERBOSE:BOOL=OFF

//Value Computed by CMake
VMA_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/VulkanMemoryAllocator

//Value Computed by CMake
VMA_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
VMA_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/VulkanMemoryAllocator

//Value Computed by CMake
VULKAN_HEADERS_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/Vulkan-Headers

//Value Computed by CMake
VULKAN_HEADERS_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
VULKAN_HEADERS_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/Vulkan-Headers

//Value Computed by CMake
VUL_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/Vulkan-Utility-Libraries

//Value Computed by CMake
VUL_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
VUL_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/Vulkan-Utility-Libraries

//Treat compiler warnings as errors
VUL_WERROR:BOOL=OFF

//The directory containing a CMake configuration file for VulkanHeaders.
VulkanHeaders_DIR:PATH=VulkanHeaders_DIR-NOTFOUND

//The directory containing a CMake configuration file for VulkanMemoryAllocator.
VulkanMemoryAllocator_DIR:PATH=VulkanMemoryAllocator_DIR-NOTFOUND

//(experimental) Automatically copy dependencies into the install
// target directory for executables. Requires CMake 3.14.
X_VCPKG_APPLOCAL_DEPS_INSTALL:BOOL=OFF

//(experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force
// serialization.
X_VCPKG_APPLOCAL_DEPS_SERIALIZED:BOOL=OFF

//Check if submodules are present
YUZU_CHECK_SUBMODULES:BOOL=ON

//Compile crash dump (Minidump) support
YUZU_CRASH_DUMPS:BOOL=OFF

//Download validation layer binary for android
YUZU_DOWNLOAD_ANDROID_VVL:BOOL=ON

//Always download time zone binaries
YUZU_DOWNLOAD_TIME_ZONE_DATA:BOOL=OFF

//Enable link-time optimization
YUZU_ENABLE_LTO:BOOL=OFF

//Allow yuzu to enable portable mode if a user folder is found
// in the CWD
YUZU_ENABLE_PORTABLE:BOOL=ON

//Compile LDN room server
YUZU_ROOM:BOOL=ON

//Compile tests
YUZU_TESTS:BOOL=OFF

//Download/Build bundled FFmpeg
YUZU_USE_BUNDLED_FFMPEG:BOOL=ON

//Download bundled Qt binaries
YUZU_USE_BUNDLED_QT:BOOL=ON

//Download bundled SDL2 binaries
YUZU_USE_BUNDLED_SDL2:BOOL=ON

//Use vcpkg for yuzu dependencies
YUZU_USE_BUNDLED_VCPKG:BOOL=ON

//Use Vulkan-Headers from externals
YUZU_USE_EXTERNAL_VULKAN_HEADERS:BOOL=ON

//Use Vulkan-Utility-Libraries from externals
YUZU_USE_EXTERNAL_VULKAN_UTILITY_LIBRARIES:BOOL=ON

//Use precompiled headers
YUZU_USE_PRECOMPILED_HEADERS:BOOL=ON

//Use Qt Multimedia
YUZU_USE_QT_MULTIMEDIA:BOOL=ON

//Use QtWebEngine for web applet implementation
YUZU_USE_QT_WEB_ENGINE:BOOL=OFF

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include

//Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib/zlibd.lib

//Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib/zlib.lib

//Enable developer mode (-Wall, -Werror, ...)
ZYAN_DEV_MODE:BOOL=OFF

//Forces asserts in release builds.
ZYAN_FORCE_ASSERTS:BOOL=OFF

//Don't use any C standard library functions (for exotic build-envs
// like kernel drivers)
ZYAN_NO_LIBC:BOOL=OFF

//Use system Zycore library
ZYAN_SYSTEM_ZYCORE:BOOL=OFF

//Enable whole program optimization (all targets)
ZYAN_WHOLE_PROGRAM_OPTIMIZATION:BOOL=OFF

ZYAN_ZYCORE_PATH:PATH=C:/Users/curti/yuzu/externals/dynarmic/externals/zycore

//Build examples
ZYCORE_BUILD_EXAMPLES:BOOL=OFF

//Build shared library
ZYCORE_BUILD_SHARED_LIB:BOOL=OFF

//Build tests
ZYCORE_BUILD_TESTS:BOOL=OFF

//Build manpages for the tools (requires Ronn-NG)
ZYDIS_BUILD_MAN:BOOL=OFF

//Build shared library
ZYDIS_BUILD_SHARED_LIB:BOOL=OFF

//Enable support for AVX-512 instructions
ZYDIS_FEATURE_AVX512:BOOL=ON

//Enable instruction decoding functionality
ZYDIS_FEATURE_DECODER:BOOL=ON

//Enable instruction encoding functionality
ZYDIS_FEATURE_ENCODER:BOOL=ON

//Enable instruction formatting functionality
ZYDIS_FEATURE_FORMATTER:BOOL=ON

//Enable support for KNC instructions
ZYDIS_FEATURE_KNC:BOOL=ON

//Enable instruction segment API
ZYDIS_FEATURE_SEGMENT:BOOL=ON

//Enables AFL persistent mode and reduces prints in ZydisFuzzIn
ZYDIS_FUZZ_AFL_FAST:BOOL=OFF

//Enables LLVM libfuzzer mode and reduces prints in ZydisFuzzIn
ZYDIS_LIBFUZZER:BOOL=OFF

//Enable minimal mode (forces ZYDIS_DECODER_MODE_MINIMAL runtime
// option)
ZYDIS_MINIMAL_MODE:BOOL=OFF

//Path to a program.
Z_VCPKG_BUILTIN_POWERSHELL_PATH:FILEPATH=C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe

//Path to a program.
Z_VCPKG_PWSH_PATH:FILEPATH=Z_VCPKG_PWSH_PATH-NOTFOUND

//Value Computed by CMake
Zycore_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/dynarmic/externals/zydis/zycore

//Value Computed by CMake
Zycore_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
Zycore_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/dynarmic/externals/zycore

//Value Computed by CMake
Zydis_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/dynarmic/externals/zydis

//The directory containing a CMake configuration file for Zydis.
Zydis_DIR:PATH=Zydis_DIR-NOTFOUND

//Value Computed by CMake
Zydis_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
Zydis_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/dynarmic/externals/zydis

//The directory which contains the installed libraries for each
// triplet
_VCPKG_INSTALLED_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed

//Value Computed by CMake
cpp-jwt_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/cpp-jwt

//The directory containing a CMake configuration file for cpp-jwt.
cpp-jwt_DIR:PATH=cpp-jwt_DIR-NOTFOUND

//Value Computed by CMake
cpp-jwt_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
cpp-jwt_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/cpp-jwt

//Value Computed by CMake
cubeb_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/cubeb

//The directory containing a CMake configuration file for cubeb.
cubeb_DIR:PATH=cubeb_DIR-NOTFOUND

//Value Computed by CMake
cubeb_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
cubeb_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/cubeb

//Value Computed by CMake
dynarmic_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/dynarmic

//The directory containing a CMake configuration file for dynarmic.
dynarmic_DIR:PATH=dynarmic_DIR-NOTFOUND

//Value Computed by CMake
dynarmic_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
dynarmic_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/dynarmic

//Value Computed by CMake
enet_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/enet

//Value Computed by CMake
enet_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
enet_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/enet

//The directory containing a CMake configuration file for fmt.
fmt_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/share/fmt

//Value Computed by CMake
httplib_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/cpp-httplib

//The directory containing a CMake configuration file for httplib.
httplib_DIR:PATH=httplib_DIR-NOTFOUND

//Value Computed by CMake
httplib_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
httplib_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/cpp-httplib

//The directory containing a CMake configuration file for lz4.
lz4_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/share/lz4

//Value Computed by CMake
mbed TLS_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/mbedtls

//Value Computed by CMake
mbed TLS_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
mbed TLS_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/mbedtls

//Value Computed by CMake
mcl_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/dynarmic/externals/mcl

//The directory containing a CMake configuration file for mcl.
mcl_DIR:PATH=mcl_DIR-NOTFOUND

//Value Computed by CMake
mcl_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
mcl_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/dynarmic/externals/mcl

//The directory containing a CMake configuration file for nlohmann_json.
nlohmann_json_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/share/nlohmann_json

//Value Computed by CMake
oaknut_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/dynarmic/externals/oaknut

//Value Computed by CMake
oaknut_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
oaknut_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/dynarmic/externals/oaknut

//Value Computed by CMake
sirit_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/sirit

//Value Computed by CMake
sirit_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
sirit_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/sirit

//Path to a file.
stb_image_INCLUDE_DIR:PATH=stb_image_INCLUDE_DIR-NOTFOUND

//Path to a file.
stb_image_resize_INCLUDE_DIR:PATH=stb_image_resize_INCLUDE_DIR-NOTFOUND

//Path to a file.
stb_image_write_INCLUDE_DIR:PATH=stb_image_write_INCLUDE_DIR-NOTFOUND

//Value Computed by CMake
tsl-robin-map_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/dynarmic/externals/robin-map

//The directory containing a CMake configuration file for tsl-robin-map.
tsl-robin-map_DIR:PATH=tsl-robin-map_DIR-NOTFOUND

//Value Computed by CMake
tsl-robin-map_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
tsl-robin-map_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/dynarmic/externals/robin-map

//Value Computed by CMake
xbyak_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703/externals/xbyak

//The directory containing a CMake configuration file for xbyak.
xbyak_DIR:PATH=xbyak_DIR-NOTFOUND

//Value Computed by CMake
xbyak_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
xbyak_SOURCE_DIR:STATIC=C:/Users/curti/yuzu/externals/xbyak

//Value Computed by CMake
yuzu_BINARY_DIR:STATIC=F:/custom-build/Yuzu-1703

//Value Computed by CMake
yuzu_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
yuzu_SOURCE_DIR:STATIC=C:/Users/curti/yuzu

//The directory containing a CMake configuration file for zstd.
zstd_DIR:PATH=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/share/zstd


########################
# INTERNAL cache entries
########################

//Have symbol _M_AMD64
ARCHITECTURE_x86_64:INTERNAL=1
//Test AVX_SUPPORTED
AVX_SUPPORTED:INTERNAL=1
//ADVANCED property for variable: Boost_CONTEXT_LIBRARY_DEBUG
Boost_CONTEXT_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_CONTEXT_LIBRARY_RELEASE
Boost_CONTEXT_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_INCLUDE_DIR
Boost_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_LIBRARY_DIR_DEBUG
Boost_LIBRARY_DIR_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_LIBRARY_DIR_RELEASE
Boost_LIBRARY_DIR_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Brotli_INCLUDE_DIR
Brotli_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Brotli_common
Brotli_common-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Brotli_decoder
Brotli_decoder-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Brotli_encoder
Brotli_encoder-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=f:/custom-build/Yuzu-1703
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=28
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 17 2022
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=E:/Program Files/Microsoft Visual Studio/2022/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/curti/yuzu
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=52
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.28
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test COMPILER_HAS_DEPRECATED
COMPILER_HAS_DEPRECATED:INTERNAL=1
//Test COMPILER_HAS_DEPRECATED_ATTR
COMPILER_HAS_DEPRECATED_ATTR:INTERNAL=
//Result of TRY_COMPILE
COMPILE_VLA_SUPPORTED:INTERNAL=FALSE
//ADVANCED property for variable: COVERAGE_COMMAND
COVERAGE_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COVERAGE_EXTRA_FLAGS
COVERAGE_EXTRA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_COUNT
CTEST_SUBMIT_RETRY_COUNT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CTEST_SUBMIT_RETRY_DELAY
CTEST_SUBMIT_RETRY_DELAY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYGWIN_BAT
CYGWIN_BAT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DART_TESTING_TIMEOUT
DART_TESTING_TIMEOUT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DOXYGEN_DOT_EXECUTABLE
DOXYGEN_DOT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DOXYGEN_EXECUTABLE
DOXYGEN_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ENABLE_OPENGL
ENABLE_OPENGL-ADVANCED:INTERNAL=1
ENET_CFLAGS:INTERNAL=
ENET_CFLAGS_I:INTERNAL=
ENET_CFLAGS_OTHER:INTERNAL=
ENET_FOUND:INTERNAL=
ENET_INCLUDEDIR:INTERNAL=
ENET_LIBDIR:INTERNAL=
ENET_LIBS:INTERNAL=
ENET_LIBS_L:INTERNAL=
ENET_LIBS_OTHER:INTERNAL=
ENET_LIBS_PATHS:INTERNAL=
ENET_MODULE_NAME:INTERNAL=
ENET_PREFIX:INTERNAL=
ENET_STATIC_CFLAGS:INTERNAL=
ENET_STATIC_CFLAGS_I:INTERNAL=
ENET_STATIC_CFLAGS_OTHER:INTERNAL=
ENET_STATIC_LIBDIR:INTERNAL=
ENET_STATIC_LIBS:INTERNAL=
ENET_STATIC_LIBS_L:INTERNAL=
ENET_STATIC_LIBS_OTHER:INTERNAL=
ENET_STATIC_LIBS_PATHS:INTERNAL=
ENET_VERSION:INTERNAL=
//Test FAST_MATH_SUPPORTED
FAST_MATH_SUPPORTED:INTERNAL=1
//Details about finding Boost
FIND_PACKAGE_MESSAGE_DETAILS_Boost:INTERNAL=[F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include][c ][v1.83.0(1.57)]
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[C:/Program Files/Git/cmd/git.exe][v2.39.0.windows.1()]
//Details about finding OpenSSL
FIND_PACKAGE_MESSAGE_DETAILS_OpenSSL:INTERNAL=[optimized;F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib/libcrypto.lib;debug;F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib/libcrypto.lib][F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include][cfound components: SSL ][v3.1.4()]
//Details about finding Perl
FIND_PACKAGE_MESSAGE_DETAILS_Perl:INTERNAL=[E:/cygwin64/bin/perl.exe][v5.32.1()]
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[D:/Python310/python.exe][v3.10.2()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[optimized;F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib/zlib.lib;debug;F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib/zlibd.lib][F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include][c ][v1.3.0(1.2)]
//Details about finding lz4
FIND_PACKAGE_MESSAGE_DETAILS_lz4:INTERNAL=[F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/share/lz4/lz4-config.cmake][v()]
//Details about finding nlohmann_json
FIND_PACKAGE_MESSAGE_DETAILS_nlohmann_json:INTERNAL=[F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/share/nlohmann_json/nlohmann_jsonConfig.cmake][v3.11.2()]
//Details about finding zstd
FIND_PACKAGE_MESSAGE_DETAILS_zstd:INTERNAL=[F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/share/zstd/zstdConfig.cmake][v1.5.5(1.5)]
//ADVANCED property for variable: GITCOMMAND
GITCOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have function fcntl
HAS_FCNTL:INTERNAL=
//Have function getaddrinfo
HAS_GETADDRINFO:INTERNAL=
//Have function gethostbyaddr_r
HAS_GETHOSTBYADDR_R:INTERNAL=
//Have function gethostbyname_r
HAS_GETHOSTBYNAME_R:INTERNAL=
//Have function getnameinfo
HAS_GETNAMEINFO:INTERNAL=
//Have function inet_ntop
HAS_INET_NTOP:INTERNAL=
//Have function inet_pton
HAS_INET_PTON:INTERNAL=
//Test HAS_MSGHDR_FLAGS
HAS_MSGHDR_FLAGS:INTERNAL=
//Have function poll
HAS_POLL:INTERNAL=
//CHECK_TYPE_SIZE: socklen_t unknown
HAS_SOCKLEN_T:INTERNAL=
//Have include alloca.h
HAVE_ALLOCA_H:INTERNAL=
//Have includes asm/types.h
HAVE_ASM_TYPES_H:INTERNAL=
//Have include emmintrin.h
HAVE_EMMINTRIN_H:INTERNAL=1
//Have function gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=
//Result of TRY_COMPILE
HAVE_HAS_SOCKLEN_T:INTERNAL=FALSE
//Have include immintrin.h
HAVE_IMMINTRIN_H:INTERNAL=1
//Have include intrin.h
HAVE_INTRIN_H:INTERNAL=1
//Have library m
HAVE_LIBM:INTERNAL=
//Have includes linux/filter.h
HAVE_LINUX_FILTER_H:INTERNAL=
//Have includes linux/netlink.h
HAVE_LINUX_NETLINK_H:INTERNAL=
//Have symbol lrint
HAVE_LRINT:INTERNAL=1
//Have symbol lrintf
HAVE_LRINTF:INTERNAL=1
//Have includes poll.h
HAVE_POLL_H:INTERNAL=
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have include smmintrin.h
HAVE_SMMINTRIN_H:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have includes strings.h
HAVE_STRINGS_H:INTERNAL=
//Result of TRY_COMPILE
HAVE_STRUCT_TIMESPEC:INTERNAL=FALSE
//Have function syslog
HAVE_SYSLOG_FUNC:INTERNAL=
//Have includes syslog.h
HAVE_SYSLOG_H:INTERNAL=
//Have includes sys/socket.h
HAVE_SYS_SOCKET_H:INTERNAL=
//Have includes sys/soundcard.h
HAVE_SYS_SOUNDCARD_H:INTERNAL=
//Have includes sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include xmmintrin.h
HAVE_XMMINTRIN_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE_nfds_t:INTERNAL=FALSE
HTTPLIB_CFLAGS:INTERNAL=
HTTPLIB_CFLAGS_I:INTERNAL=
HTTPLIB_CFLAGS_OTHER:INTERNAL=
HTTPLIB_FOUND:INTERNAL=
HTTPLIB_INCLUDEDIR:INTERNAL=
HTTPLIB_LIBDIR:INTERNAL=
HTTPLIB_LIBS:INTERNAL=
HTTPLIB_LIBS_L:INTERNAL=
HTTPLIB_LIBS_OTHER:INTERNAL=
HTTPLIB_LIBS_PATHS:INTERNAL=
HTTPLIB_MODULE_NAME:INTERNAL=
HTTPLIB_PREFIX:INTERNAL=
HTTPLIB_STATIC_CFLAGS:INTERNAL=
HTTPLIB_STATIC_CFLAGS_I:INTERNAL=
HTTPLIB_STATIC_CFLAGS_OTHER:INTERNAL=
HTTPLIB_STATIC_LIBDIR:INTERNAL=
HTTPLIB_STATIC_LIBS:INTERNAL=
HTTPLIB_STATIC_LIBS_L:INTERNAL=
HTTPLIB_STATIC_LIBS_OTHER:INTERNAL=
HTTPLIB_STATIC_LIBS_PATHS:INTERNAL=
HTTPLIB_VERSION:INTERNAL=
LIBUSB_CFLAGS:INTERNAL=
LIBUSB_CFLAGS_I:INTERNAL=
LIBUSB_CFLAGS_OTHER:INTERNAL=
LIBUSB_FOUND:INTERNAL=
LIBUSB_INCLUDEDIR:INTERNAL=
LIBUSB_LIBDIR:INTERNAL=
LIBUSB_LIBS:INTERNAL=
LIBUSB_LIBS_L:INTERNAL=
LIBUSB_LIBS_OTHER:INTERNAL=
LIBUSB_LIBS_PATHS:INTERNAL=
LIBUSB_MODULE_NAME:INTERNAL=
LIBUSB_PREFIX:INTERNAL=
LIBUSB_STATIC_CFLAGS:INTERNAL=
LIBUSB_STATIC_CFLAGS_I:INTERNAL=
LIBUSB_STATIC_CFLAGS_OTHER:INTERNAL=
LIBUSB_STATIC_LIBDIR:INTERNAL=
LIBUSB_STATIC_LIBS:INTERNAL=
LIBUSB_STATIC_LIBS_L:INTERNAL=
LIBUSB_STATIC_LIBS_OTHER:INTERNAL=
LIBUSB_STATIC_LIBS_PATHS:INTERNAL=
LIBUSB_VERSION:INTERNAL=
//ADVANCED property for variable: MAKECOMMAND
MAKECOMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MEMORYCHECK_COMMAND
MEMORYCHECK_COMMAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MEMORYCHECK_SUPPRESSIONS_FILE
MEMORYCHECK_SUPPRESSIONS_FILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MSYS_CMD
MSYS_CMD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENSSL_INCLUDE_DIR
OPENSSL_INCLUDE_DIR-ADVANCED:INTERNAL=1
OPUS_CFLAGS:INTERNAL=
OPUS_CFLAGS_I:INTERNAL=
OPUS_CFLAGS_OTHER:INTERNAL=
OPUS_FOUND:INTERNAL=
OPUS_INCLUDEDIR:INTERNAL=
OPUS_LIBDIR:INTERNAL=
OPUS_LIBS:INTERNAL=
OPUS_LIBS_L:INTERNAL=
OPUS_LIBS_OTHER:INTERNAL=
OPUS_LIBS_PATHS:INTERNAL=
OPUS_MODULE_NAME:INTERNAL=
OPUS_PREFIX:INTERNAL=
OPUS_STATIC_CFLAGS:INTERNAL=
OPUS_STATIC_CFLAGS_I:INTERNAL=
OPUS_STATIC_CFLAGS_OTHER:INTERNAL=
OPUS_STATIC_LIBDIR:INTERNAL=
OPUS_STATIC_LIBS:INTERNAL=
OPUS_STATIC_LIBS_L:INTERNAL=
OPUS_STATIC_LIBS_OTHER:INTERNAL=
OPUS_STATIC_LIBS_PATHS:INTERNAL=
OPUS_VERSION:INTERNAL=
//ADVANCED property for variable: PERL_EXECUTABLE
PERL_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: RenderDoc_INCLUDE_DIR
RenderDoc_INCLUDE_DIR-ADVANCED:INTERNAL=1
SIMPLEINI_CFLAGS:INTERNAL=
SIMPLEINI_CFLAGS_I:INTERNAL=
SIMPLEINI_CFLAGS_OTHER:INTERNAL=
SIMPLEINI_FOUND:INTERNAL=
SIMPLEINI_INCLUDEDIR:INTERNAL=
SIMPLEINI_LIBDIR:INTERNAL=
SIMPLEINI_LIBS:INTERNAL=
SIMPLEINI_LIBS_L:INTERNAL=
SIMPLEINI_LIBS_OTHER:INTERNAL=
SIMPLEINI_LIBS_PATHS:INTERNAL=
SIMPLEINI_MODULE_NAME:INTERNAL=
SIMPLEINI_PREFIX:INTERNAL=
SIMPLEINI_STATIC_CFLAGS:INTERNAL=
SIMPLEINI_STATIC_CFLAGS_I:INTERNAL=
SIMPLEINI_STATIC_CFLAGS_OTHER:INTERNAL=
SIMPLEINI_STATIC_LIBDIR:INTERNAL=
SIMPLEINI_STATIC_LIBS:INTERNAL=
SIMPLEINI_STATIC_LIBS_L:INTERNAL=
SIMPLEINI_STATIC_LIBS_OTHER:INTERNAL=
SIMPLEINI_STATIC_LIBS_PATHS:INTERNAL=
SIMPLEINI_VERSION:INTERNAL=
//ADVANCED property for variable: SITE
SITE-ADVANCED:INTERNAL=1
//Test STACK_PROTECTOR_DISABLED_SUPPORTED
STACK_PROTECTOR_DISABLED_SUPPORTED:INTERNAL=1
//Test STACK_PROTECTOR_SUPPORTED
STACK_PROTECTOR_SUPPORTED:INTERNAL=1
//CHECK_TYPE_SIZE: struct timespec unknown
STRUCT_TIMESPEC:INTERNAL=
//Have includes sys/timerfd.h
USBI_TIMERFD_AVAILABLE:INTERNAL=
//Have includes aaudio/AAudio.h
USE_AAUDIO:INTERNAL=
//Have symbol alloca
USE_ALLOCA_SUPPORTED:INTERNAL=1
//Have includes alsa/asoundlib.h
USE_ALSA:INTERNAL=
//Have includes android/log.h
USE_AUDIOTRACK:INTERNAL=
//Have includes AudioUnit/AudioUnit.h
USE_AUDIOUNIT:INTERNAL=
//Have includes jack/jack.h
USE_JACK:INTERNAL=
//Have includes kai.h
USE_KAI:INTERNAL=
//Have includes SLES/OpenSLES.h
USE_OPENSL:INTERNAL=
//Have includes pulse/pulseaudio.h
USE_PULSE:INTERNAL=
//Have includes sndio.h
USE_SNDIO:INTERNAL=
//Have includes sys/audioio.h
USE_SUN:INTERNAL=
//Have include audioclient.h
USE_WASAPI:INTERNAL=1
//Have include windows.h;mmsystem.h
USE_WINMM:INTERNAL=1
//ADVANCED property for variable: VCPKG_VERBOSE
VCPKG_VERBOSE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DEBUG
ZLIB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_RELEASE
ZLIB_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//Making sure VCPKG_MANIFEST_MODE doesn't change
Z_VCPKG_CHECK_MANIFEST_MODE:INTERNAL=ON
//The path to the PowerShell implementation to use.
Z_VCPKG_POWERSHELL_PATH:INTERNAL=C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe
//Vcpkg root directory
Z_VCPKG_ROOT_DIR:INTERNAL=C:/Users/curti/yuzu/externals/vcpkg
//Last used Boost_COMPILER value.
_Boost_COMPILER_LAST:INTERNAL=-vc140
//Components requested for this build tree.
_Boost_COMPONENTS_SEARCHED:INTERNAL=context
//Last used Boost_INCLUDE_DIR value.
_Boost_INCLUDE_DIR_LAST:INTERNAL=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/include
//Last used Boost_LIBRARY_DIR_DEBUG value.
_Boost_LIBRARY_DIR_DEBUG_LAST:INTERNAL=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/debug/lib
//Last used Boost_LIBRARY_DIR_RELEASE value.
_Boost_LIBRARY_DIR_RELEASE_LAST:INTERNAL=F:/custom-build/Yuzu-1703/vcpkg_installed/x64-windows/lib
//Last used Boost_NAMESPACE value.
_Boost_NAMESPACE_LAST:INTERNAL=boost
//Last used Boost_USE_MULTITHREADED value.
_Boost_USE_MULTITHREADED_LAST:INTERNAL=ON
//Last used Boost_USE_STATIC_LIBS value.
_Boost_USE_STATIC_LIBS_LAST:INTERNAL=OFF
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=F:/custom-build/yuzu
__pkg_config_checked_ENET:INTERNAL=1
__pkg_config_checked_HTTPLIB:INTERNAL=1
__pkg_config_checked_LIBUSB:INTERNAL=1
__pkg_config_checked_OPUS:INTERNAL=1
__pkg_config_checked_SIMPLEINI:INTERNAL=1
//CHECK_TYPE_SIZE: nfds_t unknown
nfds_t:INTERNAL=
//ADVANCED property for variable: stb_image_INCLUDE_DIR
stb_image_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: stb_image_resize_INCLUDE_DIR
stb_image_resize_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: stb_image_write_INCLUDE_DIR
stb_image_write_INCLUDE_DIR-ADVANCED:INTERNAL=1

